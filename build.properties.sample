# -----------------------------------------------------------------------------
# build.properties.sample
#
# This is an example "build.properties" file, used to customize building Struts
# for your local environment.  Make any changes you need, and rename this file
# to "build.properties" in the same directory that contains the Struts
# "build.xml" file.
#
# The JARS required for each release or beta distribution are available
# as a single archive from the Struts downloads directory.
# Requirements for the Nightly Build may change between releases and betas.
#
# $Id$
# -----------------------------------------------------------------------------
compile.deprecation=true

# WARNING:  The relative paths below assume that the build.xml file is in the
# top-level directory of the jakarta-struts source distribution.

# commons-lib.home Where the CVS toplevel commons live
commons-lib.home=D:/Projects/Apache/jakarta-commons

# commons-sandbox.home Where the CVS toplevel commons-sandbox live.
commons-sandbox-lib.home=D:/Projects/Apache/jakarta-commons-sandbox

# apache.home - Where precompiled jar files from Apache live.
apache.home=D:/Java/Programs/Apache

# The directory containing your binary distribution of Tomcat 4.0 ("Catalina"
# is the servlet container part of this distribution), from CVS module
# "jakarta-tomcat-4.0" at jakarta.apache.org).  This is only required
# if you are going to execute the "deploy.catalina" target.
catalina.home=${apache.home}/jakarta-tomcat-4.0.6

# The JAR file containing the Beanutils package (see Installation page)
# from the Jakarta Commons project.
commons-beanutils.jar=${commons-lib.home}/beanutils/dist/commons-beanutils.jar

# The JAR file containing the Digester package (see Installation page)
# from the Jakarta Commons project.
commons-digester.jar=${commons-lib.home}/digester/dist/commons-digester.jar

# The JAR file containing the FileUpload package (see Installation page)
# from the Jakarta Commons project.
commons-fileupload.jar=${commons-lib.home}/fileupload/dist/commons-fileupload-1.0.jar

# The JAR file containing the Logging package (see Installation page)
# from the Jakarta Commons project.
commons-logging.jar=${commons-lib.home}/logging/dist/commons-logging.jar

# The JAR file containing the Validator package (see Installation page)
# from the Jakarta Commons project.
commons-validator.jar=${commons-lib.home}/validator/dist/commons-validator.jar

# The JAR file containing the Jakarta ORO package (Version 2.0.6 or later)
jakarta-oro.jar=${apache.home}/jakarta-oro-2.0.6/jakarta-oro-2.0.6.jar

# The JAR file containing the JDBC 2.0 Optional Package extensions API
# (javax.sql).  This file will automatically be added to your class path
# when you compile Struts
#
# This file is necessary when compiling Struts under the JDK 1.3.  It
# is not necessary when compiling with  the JDK 1.4 and higher, as 
# "javax.sql.*" is included with the JDK since 1.4.
#
# This file can be obtained from:
# http://java.sun.com/products/jdbc/download.html
jdbc20ext.jar=../../../Java/Programs/sun/jdbc2_0-stdext.jar

# The JAR file containing the JSP API classes to compile against if you are
# using JSP 2.0 or later (where these classes are separated from servlet.jar).
# If you are using JSP 1.1 or 1.2, leave this property unset
#jsp.jar=${apache.home}/jakarta-servletapi/lib/jsp.jar

# The JAR file containing the Servlet API classes to compile against (either
# version 2.2 or 2.3)
servlet.jar=${apache.home}/jakarta-servletapi/lib/servlet.jar

# The directory containing your binary distribution of Tomcat 3.3, from CVS
# module "jakarta-tomcat" (and branch "TOMCAT_32") at jakarta.apache.org.
# This is only required if you are going to execute the "deploy.tomcat" target.
tomcat.home=${apache.home}/jakarta-tomcat-3.3.1

# The JAR file containing the Xerces parser.  This is only required if you are
# going to execute the "deploy.catalina" target.
xerces.jar=${apache.home}/xerces-1_4_4/xerces.jar

# The JAR file containing the ANTLR runtime support classes, needed for the
# validwhen validator rule to work.  You can get this file from:
# http://www.antlr.org/
antlr.jar = ../../../antlr-2.7.2/antlr.jar

# The JAR file containing the logging package.  This is required if you are
# going to execute the "test.junit" target.
log4j.jar=${apache.home}/logging-log4j-1.2.17/dist/lib/log4j-1.2.17.jar

# Properties related to optional tasks
# ------------------------------------

# The JAR file containing the Checkstyle package version 2.4, if available. If
# you do not have Checkstyle installed, do not set this property.
checkstyle.jar = /Java/checkstyle-2.4/checkstyle-all-2.4.jar

# The Directory containing the PMD package distribution, 1.2.1, if available. If
# you do not have PMD installed, do not set this property.
pmd.home = /Java/Programs/SourceForge/pmd-1.2.1


# Properties related to Struts Contrib
# -----------------------------------------

# These links to the JSTL jar files are only required for building the
# Struts-EL contrib library.  If they are not present, it will not build that
# contrib library (although it doesn't prevent you from building it directly in
# "contrib/struts-el".

jstl.home			=${apache.home}/jakarta-taglibs/standard-1.0
jstl.jar			=${jstl.home}/lib/jstl.jar
jstl-standard.jar	=${jstl.home}/lib/standard.jar
struts.home			=../../

# Properties related to Struts unit testing
#
# In order for the Cactus tests to work, you must have a copy of
# junit.jar in ANT_HOME/lib (See Ant docs on JUnit task)

# ==========================================
# Choose your Cactus!
# (un-comment only one set of cacuts properties)
# ==========================================

# -----------------------------------------
# junit - 3.8.1 or later
# -----------------------------------------
junit.jar = ${apache.home}/junit3.8.1/junit.jar

# -----------------------------------------
# J2EE 1.2 (Servlet 2.2)
# -----------------------------------------
# --- Cactus 12-1.3 ---
# cactus.home=${apache.home}/jakarta-cactus-12-1.3
# cactus.jspRedirector=web/test/jspRedirector.jsp
# cactus.servertest.class=org.apache.cactus.ant.RunServerTestsTask

# --- Cactus 12-1.4 ---
# cactus.home=${apache.home}/jakarta-cactus-12-1.4
# cactus.servertest.class=org.apache.cactus.ant.RunServerTestsTask

# --- Cactus 12-1.4.1 ---
# cactus.home=${apache.home}/jakarta-cactus-12-1.4.1
# cactus.servertest.class=org.apache.cactus.ant.RunServerTestsTask

# --- Cactus 12-1.6.1 ---
# cactus.home=${apache.home}/jakarta-cactus-12-1.6.1

# --- Cactus 12-1.7 ---
# cactus.home=${apache.home}/jakarta-cactus-12-1.7

# -----------------------------------------
# J2EE 1.3 (Servlet 2.3)
# -----------------------------------------
# --- Cactus 13-1.3 ---
# cactus.home=${apache.home}/jakarta-cactus-13-1.3
# cactus.jspRedirector=web/test/jspRedirector.jsp
# cactus.servertest.class=org.apache.cactus.ant.RunServerTestsTask

# --- Cactus 13-1.4 ---
# cactus.home=${apache.home}/jakarta-cactus-13-1.4
# cactus.servertest.class=org.apache.cactus.ant.RunServerTestsTask

# --- Cactus 13-1.4.1 ---
# cactus.home=${apache.home}/jakarta-cactus-13-1.4.1
# cactus.servertest.class=org.apache.cactus.ant.RunServerTestsTask

# --- Cactus 13-1.6.1 ---
# cactus.home=${apache.home}/jakarta-cactus-13-1.6.1

# --- Cactus 13-1.7 ---
# cactus.home=${apache.home}/jakarta-cactus-13-1.7

# -----------------------------------------


# Ant Jar for optional taglib documentation task
ant.jar=${apache.home}/apache-ant-1.5.3-1/lib/ant.jar

# Servlet engine locations for the tests

# Note: If you don't want to run the test on a given servlet engine, just
#       comment it's home property. For example, if you don't want to run the
#       tests on Tomcat 4.0, comment the "tomcat.home.40" property.

tomcat.home.33 = ${apache.home}/jakarta-tomcat-3.3.1
tomcat.home.40 = ${apache.home}/jakarta-tomcat-4.0.6
tomcat.home.41 = ${apache.home}/jakarta-tomcat-4.1.27
# use value of tomcat.home.41 to set equivalent property for Maven-Cactus plug-in
cactus.home.tomcat4x=${tomcat.home.41}
